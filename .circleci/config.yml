version: 2.1
defaults: &defaults
    working_directory: ~/enogwe
    docker:
        - image: circleci/php:7.2-node-browsers
defaultsGit: &defaultsGit
    machine:
      enabled: true
restoreCache: &restoreCache
    keys:
        - enogwe-node-cache-{{ checksum "package.lock.json" }}
        - enogwe-composer-cache-{{ checksum "composer.lock" }}
jobs:
    install:
        <<: *defaults
        steps:
            - checkout
            - restore_cache:
                <<: *restoreCache
            - run:
                name: install xdebug
                command: pecl install xdebug
            - run:
                name: install composer packages
                command: composer install
            - run:
                name: install npm packages
                command: if (test ! -d ~/enogwe_node/node_modules); then npm ci; fi
            - save_cache:
                key: enogwe-composer-cache-{{ checksum "composer.lock" }}
                path: ~/enogwe_node/vendor
            - save_cache:
                key: enogwe-node-cache-{{ checksum "package.lock.json" }}
                path: ~/enogwe_node/node_modules
    testPhp:
        <<: *defaults
        steps:
            - checkout
            - restore_cache:
                <<: *restoreCache
            - run:
                name: run php tests
                command: npm run test:php
    testJs:
        <<: *defaults
        steps:
            - checkout
            - restore_cache:
                <<: *restoreCache
            - run:
                name: run  javascript  tests
                command: npm run test:js
    testE2e:
        <<: *defaults
        steps:
            - checkout
            - restore_cache:
                <<: *restoreCache
            - run:
                name: run e2e tests
                command: npm run test
    build:
        <<: *defaults
        steps:
            - checkout
            - restore_cache:
                <<: *restoreCache
            - run:
                name: build theme
                command: npm run build
    release:
        <<: *defaults
        steps:
            - checkout
            - restore_cache:
                <<: *restoreCache
            - run:
                name: release
                command: npx semantic-release
    deploy:
        <<: *defaultsGit
        steps:
            -  checkout
            - add_ssh_keys:
                fingerprints:
                    - "db:72:52:03:0a:86:ac:d4:90:80:9b:81:5d:82:d3:80"
            -  run:
                name: add remote
                command: |
                    #  Add user
                    git config --global user.email $GIT_EMAIL
                    git config --global user.name $GIT_USER
                    #  Add cPanel remotes
                    git remote add cpanel $GIT_REMOTE
                    git remote -v
            -  run:
                name: push to cpanel
                command: |
                    # push to cpanel
                    git push cpanel master
workflows:
    version: 2
    build-test-release-deploy:
        jobs:
            - install
            - testJs:
                requires:
                    - install
            - testPhp:
                requires:
                    - install
            - testE2e:
                requires:
                    - install
            - build:
                requires:
                    - testPhp
                    - testJs
                    - testE2e
            - release:
                requires:
                    - build
                filters:
                    branches:
                        only:
                            - master
            - deploy:
                requires:
                    - release
                filters:
                    branches:
                        only:
                            - master




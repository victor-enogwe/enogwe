version: 2.1
defaultsPhp: &defaultsPhp
    docker:
        - image: circleci/php:7.2-node-browsers
defaultsNode: &defaultsNode
    working_directory: ~/enogwe_node
    docker:
        - image: circleci/node:10
defaultsGit: &defaultsGit
    machine:
      enabled: true
restoreCacheNode: &restoreCacheNode
    keys:
        - enogwe-node-cache-{{ checksum "package.json" }}
installPackagesNode:  &installPackagesNode
    name: install packages
    command: if (test ! -d ~/enogwe_node/node_modules); then npm ci; fi
jobs:
    build:
        <<: *defaultsNode
        steps:
            - checkout
            - restore_cache:
                <<: *restoreCacheNode
            - run:
                <<: *installPackagesNode
            - run:
                name: build theme
                command: npm run build
            - save_cache:
                key: enogwe-node-cache-{{ checksum "package.json" }}
                paths:
                    - ~/enogwe_node/node_modules
    test:
        <<: *defaultsPhp
        steps:
            - checkout
    release:
        <<: *defaultsNode
        steps:
            - checkout
            - restore_cache:
                <<: *restoreCacheNode
            - run:
                name: release
                command: npx semantic-release
    deploy:
        <<: *defaultsGit
        steps:
            -  checkout
            - add_ssh_keys:
                fingerprints:
                    - "db:72:52:03:0a:86:ac:d4:90:80:9b:81:5d:82:d3:80"
            -  run:
                name: add remote
                command: |
                    #  Add user
                    git config --global user.email $GIT_EMAIL
                    git config --global user.name $GIT_USER
                    #  Add cPanel remotes
                    git remote add cpanel $GIT_REMOTE
                    git remote -v
            -  run:
                name: push to cpanel
                command: |
                    # push to cpanel
                    git push cpanel master
workflows:
    version: 2
    build-test-release-deploy:
        jobs:
            - build
            - test:
                requires:
                    - build
            - release:
                requires:
                    - test
                filters:
                    branches:
                        only:
                            - master
            - deploy:
                requires:
                    - release
                filters:
                    branches:
                        only:
                            - master



